apply plugin: 'com.android.application'

dependencies {
    compile project(':commons-android')
    compile rootProject.ext.supportLibs.appCompat
    compile rootProject.ext.supportLibs.design
    compile rootProject.ext.gpsLibs.ads
    compile rootProject.ext.gpsLibs.analytics
    compile rootProject.ext.gpsLibs.location
    compile rootProject.ext.gpsLibs.maps
    compile rootProject.ext.fbLibs.audienceNetwork
    compile fileTree(include: ['google-mobile-ads-mediation-facebook-adapter.jar'], dir: 'libs')
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    Properties releaseVersionProps = new Properties()
    releaseVersionProps.load(new FileInputStream(file("version.properties")))

    defaultConfig {
        versionCode releaseVersionProps['version.code'] as Integer
        versionName releaseVersionProps['version.name']
    }

    Properties releaseKeyProps = new Properties()
    def keysFile = file("../keys.properties")
    if (keysFile.exists()) {
        releaseKeyProps.load(new FileInputStream(file("../keys.properties")))
	    signingConfigs {
	        release {
	            storeFile file(releaseKeyProps['key.store'])
	            storePassword releaseKeyProps['key.store.password']
	            keyAlias releaseKeyProps['key.alias']
	            keyPassword releaseKeyProps['key.alias.password']
	        }
	    }
    }
    buildTypes {
        debug {
            versionNameSuffix "_DEBUG"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            if (keysFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }
    lintOptions {
        abortOnError true
        disable 'InvalidPackage', 'ClickableViewAccessibility', 'MergeRootFrame', 'Overdraw', 'UselessParent', 'IconDensities'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
